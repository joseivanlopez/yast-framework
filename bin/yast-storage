#!/usr/bin/env ruby

# Copyright (c) [2021] SUSE LLC
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, contact SUSE LLC.
#
# To contact SUSE LLC about this file by physical or electronic mail, you may
# find current contact information at www.suse.com.

require "yast"	# Changes $LOAD_PATH!

# $LOAD_PATH.unshift(File.expand_path("../lib", __dir__))
require "y2storage"
require "y2storage/autoinst_proposal"

Yast.import "ProductFeatures"

config_file = ARGV.last
commit = !ARGV.include?("--no-commit")
actions = ARGV.include?("--actions")

config = Yast::XML.XMLToYCPFile(config_file)
proposal = nil

Y2Storage::StorageManager.instance.probe

if config["partitioning"].is_a?(Hash)
  Yast::ProductFeatures.Import(config)
  settings = Y2Storage::ProposalSettings.new_for_current_product
  proposal = Y2Storage::GuidedProposal.new(settings: settings)
else
  proposal = Y2Storage::AutoinstProposal.new(partitioning: config["partitioning"])
end

proposal.propose
devicegraph = proposal.devices

if actions
  puts Y2Storage::ActionsPresenter.new(devicegraph.actiongraph).to_s
end

if commit
  # Y2Storage::StorageManager.instance.staging = devicegraph
  # Y2Storage::StorageManager.instance.commit
  puts "Let's not break the system"
else
  Y2Storage::YamlWriter.write(devicegraph, $stdout)
end

